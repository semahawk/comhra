#!/usr/bin/perl
#
# fetchlogs.pl
#
# Copyright: (c) 2013 by Szymon Urba≈õ <szymon.urbas@aol.com>
#
# Usage: fetchlogs.pl
#
# Description:
#
# License: the MIT license
#
# Created at: 07/14/13 10:45:15
#

use strict;
use warnings;
use DBI;
use JSON;
use Digest::SHA1 qw/sha1_hex/;

my $db = DBI->connect("dbi:SQLite:database.db") or die "couldn't connect to the database!\n";

if (!defined $ARGV[0] || $ARGV[0] eq "undefined"){
    die <<EOS;

usage: $0 fetch [limit]
     | $0 save <username> <color> <message>
     | $0 register <username> <password> [color]
     | $0 login <username> <password>
     ;

EOS
}

if ($ARGV[0] eq "fetch"){
  my $stmt = "SELECT * FROM messages ";
  if (defined $ARGV[1]){
    $stmt .= "ORDER BY time DESC LIMIT $ARGV[1] ";
  }
  my $res = $db->selectall_arrayref(qq/$stmt/);
  print to_json $res;
}
elsif ($ARGV[0] eq "save"){
  if (!defined $ARGV[1]){
    die "save: <username> not specified\n";
  } elsif (!defined $ARGV[2]){
    die "save: <color> not specified\n";
  } elsif (!defined $ARGV[3]){
    die "save: <message> not specified\n";
  }

  my $stmt = "insert into messages(id, username, color, msg)" .
             "values(NULL, '$ARGV[1]', '$ARGV[2]', '$ARGV[3]')";

  $db->do($stmt);
}
elsif ($ARGV[0] eq "register"){
  if (!defined $ARGV[1] || $ARGV[1] eq "undefined"){
    die "register: <username> not specified\n";
  } elsif (!defined $ARGV[2] || $ARGV[2] eq "undefined"){
    die "register: <password> not specified\n";
  } elsif (!defined $ARGV[3] || $ARGV[3] eq "undefined"){
    $ARGV[3] = "#525252";
  }

  my $rows = $db->selectrow_array("select count(*) from users where login = '$ARGV[1]'");

  die "register: account '$ARGV[1]' already exists\n" if $rows > 0;

  my $stmt = "insert into users(id, login, password, perm, color)" .
             "values(NULL, '$ARGV[1]', '" . sha1_hex($ARGV[2]) . "', 0, '$ARGV[3]')";

  $db->do($stmt);
}
elsif ($ARGV[0] eq "login"){
  if (!defined $ARGV[1] || $ARGV[1] eq "undefined"){
    die "usage: /login <username> <password>\n";
  } elsif (!defined $ARGV[2] || $ARGV[2] eq "undefined"){
    die "login: <password> not specified\n";
  }

  my $sql = "select * from users where login = ? and password = ?";
  my @row = $db->selectrow_array($sql, undef, $ARGV[1], sha1_hex($ARGV[2]));

  unless (@row){ die "login into account '$ARGV[1]' failed\n" }

  print to_json \@row;
}
else {
  die "$0: unknown command '$ARGV[0]'\n"
}

$db->disconnect;
